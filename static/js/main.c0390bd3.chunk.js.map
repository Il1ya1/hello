{"version":3,"sources":["Loader.js","App.js","serviceWorker.js","index.js"],"names":["Loader","react_default","a","createElement","className","App","state","data","copyData","firstVisit","loader","sortedBy","id","inc","selected","firstName","lastName","email","phone","activeSorting","searchTerm","selectedUsers","rowCurrent","isModal","isValid","userTemplate","address","streetAddress","city","zip","description","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","intro","many","manyFile","small","smallFile","onSubmit","e","preventDefault","type","onClick","_this","getDataUsers","count","setState","response","length","error","console","log","filterHandler","newData","filter","el","String","toLowerCase","indexOf","target","value","decrementSorting","arTypeData","Object","toConsumableArray","sort","b","sortingIncrement","sortHandler","_objectSpread2","objectSpread","defineProperty","rowHandler","index","removeSelectUser","showModal","closeModal","handlerAddAdressField","name","handlerAddField","addUserHandler","concat","arrowIcon","width","height","enableBackground","version","viewBox","xmlns","d","handlePageChange","pageNumber","that","this","document","addEventListener","keyCode","_this2","_this$state","chunkData","_","chunk","src_Loader","onChange","map","i","key","defaultValue","readOnly","Pagination_default","itemClass","linkClass","activeLinkClass","disabled","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c0390bd3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <div className=\"lds-ripple\">\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader;","import _ from 'lodash';\r\nimport React from 'react';\r\nimport './App.scss';\r\nimport './loader.scss';\r\nimport axios from 'axios';\r\nimport Loader from './Loader';\r\nimport Pagination from \"react-js-pagination\";\r\nimport manyFile from \"./many\";\r\nimport smallFile from \"./small\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data : [],\r\n    copyData: [],\r\n    firstVisit: true,\r\n    loader: true,\r\n    sortedBy: {\r\n      id : {\r\n        inc : false,\r\n        selected : false,\r\n      },\r\n      firstName : {\r\n        inc: false,\r\n        selected: false,\r\n      },\r\n      lastName : {\r\n        inc: false,\r\n        selected: false,\r\n      },\r\n      email : {\r\n        inc: false,\r\n        selected: false,\r\n      },\r\n      phone : {\r\n        inc: false,\r\n        selected: false,\r\n      },\r\n    },\r\n    activeSorting: '', \r\n    searchTerm: '',\r\n    selectedUsers: [],\r\n    rowCurrent: null,\r\n    isModal: false,\r\n    isValid: false,\r\n    userTemplate: {\r\n      id: null,\r\n      firstName: null,\r\n      lastName: null,\r\n      email: null,\r\n      address: {\r\n        streetAddress: null,\r\n        city: null,\r\n        state: null,\r\n        zip: null\r\n      },\r\n      description: null,\r\n    },\r\n    activePage: 1,\r\n    itemsCountPerPage: 50,\r\n    totalItemsCount: null,\r\n    pageRangeDisplayed: 5,\r\n  }\r\n\r\n  intro = () => {\r\n    // const many = 'http://www.filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}';\r\n    // const small = 'http://www.filltext.com/?rows=32&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D';\r\n    const many = manyFile;\r\n    const small = smallFile;\r\n    return (\r\n      <form className=\"intro\" onSubmit={e => e.preventDefault()}>\r\n        <span className=\"intro__title\">\r\n          Выберите объем данных\r\n        </span>\r\n        <div className=\"intro__buttons\">\r\n          <button type=\"sumbit\" className=\"intro__btn btn btn--primary\" onClick={() => this.getDataUsers(small)}>Маленький ({this.state.itemsCountPerPage})</button>\r\n          <button type=\"sumbit\" className=\"intro__btn btn btn--primary\" onClick={() => this.getDataUsers(many)}>Большой (1000)</button>\r\n        </div>\r\n      </form>\r\n    )\r\n\r\n  }\r\n  //getDataUsers = async (count) =>\r\n  getDataUsers = (count) => {\r\n    this.setState({\r\n      firstVisit: false,\r\n    });\r\n    try {\r\n      // const response = await axios.get(count, {\r\n      //   'Access-Control-Allow-Origin': 'http://www.filltext.com'\r\n      // });\r\n      const response = {\r\n        data: count\r\n      }\r\n\r\n      this.setState({\r\n        data: response.data,\r\n        copyData: response.data,\r\n        loader: false,\r\n        totalItemsCount: response.data.length > this.state.itemsCountPerPage ? response.data.length : null,\r\n      });\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const that = this;\r\n    document.addEventListener('keydown', function(e) {\r\n      const escape = 27;\r\n      if (e.keyCode === escape && that.state.isModal) {\r\n        that.setState({\r\n          isModal: false,\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  filterHandler = (e) => {\r\n    const { copyData } = this.state;\r\n    const newData = copyData.filter(el => {\r\n      if (String(el.id).toLowerCase().indexOf(e.target.value.toLowerCase()) !== -1) {\r\n        return true\r\n      }\r\n      if (el.firstName.toLowerCase().indexOf(e.target.value.toLowerCase()) !== -1) {\r\n        return true\r\n      }\r\n      if (el.lastName.toLowerCase().indexOf(e.target.value.toLowerCase()) !== -1) {\r\n        return true\r\n      }\r\n      if (el.email.toLowerCase().indexOf(e.target.value.toLowerCase()) !== -1) {\r\n        return true\r\n      }\r\n      if (el.phone.toLowerCase().indexOf(e.target.value.toLowerCase()) !== -1) {\r\n        return true\r\n      }\r\n      return false;\r\n    })\r\n    this.setState({\r\n      searchTerm: e.target.value,\r\n      data: newData,\r\n      activePage: 1,\r\n      selectedUsers: [],\r\n      rowCurrent: null,\r\n      sortedBy: {\r\n        id: {\r\n          inc: false,\r\n          selected: false,\r\n        },\r\n        firstName: {\r\n          inc: false,\r\n          selected: false,\r\n        },\r\n        lastName: {\r\n          inc: false,\r\n          selected: false,\r\n        },\r\n        email: {\r\n          inc: false,\r\n          selected: false,\r\n        },\r\n        phone: {\r\n          inc: false,\r\n          selected: false,\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  decrementSorting = (type) => {\r\n    const arTypeData = [...this.state.data];\r\n    arTypeData.sort((a, b) => {\r\n      if (a[type] > b[type]) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n\r\n    this.setState({\r\n      data: arTypeData\r\n    })\r\n  }\r\n\r\n  sortingIncrement = (type) => {\r\n    const arTypeData = [...this.state.data];\r\n    arTypeData.sort((a, b) => {\r\n      if (a[type] < b[type]) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n\r\n    this.setState({\r\n      data: arTypeData\r\n    })\r\n  }\r\n\r\n  sortHandler = type => () => {\r\n    if (this.state.data.length < 3) {\r\n      return;\r\n    }\r\n\r\n    const { activeSorting } = this.state;\r\n    if (activeSorting !== '' && activeSorting !== type) {\r\n      this.setState({\r\n        activeSorting: type,\r\n        sortedBy: {\r\n          ...this.state.sortedBy,\r\n          [this.state.activeSorting]: {\r\n            selected: false,\r\n            inc: false,\r\n          },\r\n          [type]: {\r\n            ...this.state.sortedBy[type],\r\n            selected: true,\r\n            inc: true,\r\n          }\r\n        },\r\n      }, () => {\r\n        this.sortingIncrement(type);\r\n      });\r\n      return;\r\n    }\r\n    this.setState({\r\n      activeSorting: type,\r\n      sortedBy: {\r\n        ...this.state.sortedBy,\r\n        [type]: {\r\n          ...this.state.sortedBy[type],\r\n          selected: true,\r\n          inc: !this.state.sortedBy[type].inc,\r\n        }\r\n      }\r\n    }, () => {\r\n        this.state.sortedBy[type].inc ? this.sortingIncrement(type) : this.decrementSorting(type)\r\n    });\r\n  }\r\n\r\n  rowHandler = (index) => () => {\r\n    this.setState({\r\n      selectedUsers: [this.state.data[index]],\r\n      rowCurrent: index,\r\n    })\r\n  }\r\n\r\n  removeSelectUser = () => {\r\n    this.setState({\r\n      selectedUsers: [],\r\n      rowCurrent: null,\r\n    })\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      isModal: true,\r\n    })\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.setState({\r\n      isModal: false,\r\n    })\r\n  }\r\n\r\n  handlerAddAdressField = name => e => {\r\n    const { userTemplate } = this.state;\r\n    this.setState({\r\n      userTemplate: {\r\n        ...userTemplate,\r\n        address: {\r\n          ...userTemplate.address,\r\n          [name]: e.target.value,\r\n        }\r\n      }\r\n    }, () => {\r\n      this.setState({\r\n        isValid: this.isValid()\r\n      })\r\n    })\r\n  }\r\n\r\n  handlerAddField = name => e => {\r\n    const { userTemplate } = this.state;\r\n    this.setState({\r\n      userTemplate: {\r\n        ...userTemplate,\r\n        [name]: e.target.value,\r\n      }\r\n    }, () => {\r\n      this.setState({\r\n        isValid: this.isValid()\r\n      })\r\n    });\r\n    \r\n  } \r\n\r\n  isValid = (e) => {\r\n    const { userTemplate } = this.state;\r\n    const { address } = this.state.userTemplate;\r\n\r\n    if (address.city === null) {\r\n      return false;\r\n    }\r\n    if (address.state === null) {\r\n      return false;\r\n    }\r\n    if (address.streetAddress === null) {\r\n      return false;\r\n    }\r\n    if (address.zip === null) {\r\n      return false;\r\n    }\r\n    if (userTemplate.id === null) {\r\n      return false;\r\n    }\r\n    if (userTemplate.description === null) {\r\n      return false;\r\n    }\r\n    if (userTemplate.email === null) {\r\n      return false;\r\n    }\r\n    if (userTemplate.firstName === null) {\r\n      return false;\r\n    }\r\n    if (userTemplate.lastName === null) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  addUserHandler = () => {\r\n    const { userTemplate } = this.state;\r\n\r\n    this.setState({\r\n      data: [{...userTemplate}, ...this.state.data],\r\n      copyData: [{ ...userTemplate }, ...this.state.copyData],\r\n      isModal: false,\r\n      userTemplate: {\r\n        id: null,\r\n        firstName: null,\r\n        lastName: null,\r\n        email: null,\r\n        address: {\r\n          streetAddress: null,\r\n          city: null,\r\n          state: null,\r\n          zip: null\r\n        },\r\n        description: null,\r\n      }\r\n    })\r\n  }\r\n\r\n  arrowIcon = () => {\r\n    return (\r\n      <svg width=\"10px\" height=\"10px\" enableBackground=\"new 0 0 292.362 292.362\" version=\"1.1\" viewBox=\"0 0 292.362 292.362\"  xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"m286.94 69.377c-3.614-3.617-7.898-5.424-12.848-5.424h-255.81c-4.952 0-9.233 1.807-12.85 5.424-3.617 3.621-5.424 7.902-5.424 12.851 0 4.948 1.807 9.229 5.424 12.847l127.91 127.91c3.621 3.617 7.902 5.428 12.85 5.428s9.233-1.811 12.847-5.428l127.91-127.91c3.613-3.617 5.427-7.898 5.427-12.847 0-4.948-1.814-9.229-5.427-12.85z\"/>\r\n      </svg>\r\n    )\r\n  }\r\n\r\n  handlePageChange = (pageNumber) => {\r\n    this.setState({ activePage: pageNumber });\r\n  }\r\n\r\n  render() {\r\n    const { data, copyData, itemsCountPerPage, loader, firstVisit } = this.state;\r\n    const chunkData = _.chunk(data, itemsCountPerPage);\r\n\r\n    if (firstVisit) {\r\n      return (\r\n        this.intro()\r\n      )\r\n    }\r\n\r\n    if (loader) {\r\n      return (\r\n        <Loader />\r\n      )\r\n    }\r\n\r\n    if (data.length === 0 && copyData.length === 0) {\r\n      return (\r\n        <div>Нет данных</div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"users\">\r\n          <div className=\"users__head\">\r\n            <button type=\"button\" className=\"users__addButton btn btn--info\" onClick={this.showModal}>Добавить пользователя</button>\r\n            <div>\r\n              Фильтровать по: <input type=\"text\" onChange={this.filterHandler} value={this.state.searchTerm} />\r\n            </div>\r\n          </div>\r\n          <div className=\"users__side\">\r\n            \r\n            {\r\n              this.state.selectedUsers.length > 0 ?\r\n                this.state.selectedUsers.map((el, i) => (\r\n                  <div key={i} onClick={this.removeSelectUser} className=\"selectedUser\">\r\n                    <div className=\"selectedUser__group\">\r\n                      Выбран пользователь <b>{el.firstName}</b>\r\n                    </div>\r\n                    <div className=\"selectedUser__group\">\r\n                      <div>Описание:</div>\r\n                      <textarea defaultValue={el.description} readOnly></textarea>\r\n                    </div>\r\n                    <div className=\"selectedUser__group\">\r\n                      Адрес проживания: <b>{el.address.streetAddress}</b>\r\n                    </div>\r\n                    <div className=\"selectedUser__group\">\r\n                      Город: <b>{el.address.city}</b>\r\n                    </div>\r\n                    <div className=\"selectedUser__group\">\r\n                      Провинция/штат: <b>{el.address.state}</b>\r\n                    </div>\r\n                    <div className=\"selectedUser__group\">\r\n                      Индекс: <b>{el.address.zip}</b>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n                :\r\n                <span className=\"users__sideTitle\">Пользователь не выбран</span>\r\n            }\r\n          </div>\r\n          <div className=\"users__content\">\r\n            <table className=\"users__table table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>\r\n                    <button type=\"button\" onClick={this.sortHandler('id')} className={\r\n                      this.state.sortedBy['id'].selected ?\r\n                        this.state.sortedBy['id'].selected && !this.state.sortedBy['id'].inc ?\r\n                          'active up'\r\n                            :\r\n                              'active'\r\n                                :\r\n                                  null\r\n                    }>ID {this.arrowIcon()}\r\n                    </button>\r\n                    </th>\r\n                  <th><button type=\"button\" onClick={this.sortHandler('firstName')} className={\r\n                    this.state.sortedBy['firstName'].selected ?\r\n                      this.state.sortedBy['firstName'].selected && !this.state.sortedBy['firstName'].inc ?\r\n                        'active up'\r\n                          :\r\n                            'active'\r\n                              :\r\n                                null\r\n                    }>firstName {this.arrowIcon()}</button></th>\r\n                  <th><button type=\"button\" onClick={this.sortHandler('lastName')} className={\r\n                    this.state.sortedBy['lastName'].selected ?\r\n                      this.state.sortedBy['lastName'].selected && !this.state.sortedBy['lastName'].inc ?\r\n                        'active up'\r\n                          :\r\n                            'active'\r\n                              :\r\n                                null\r\n                    }>lastName {this.arrowIcon()}</button></th>\r\n                  <th><button type=\"button\" onClick={this.sortHandler('email')} className={\r\n                    this.state.sortedBy['email'].selected ?\r\n                      this.state.sortedBy['email'].selected && !this.state.sortedBy['email'].inc ?\r\n                        'active up'\r\n                          :\r\n                            'active'\r\n                              :\r\n                                null\r\n                    }>email {this.arrowIcon()}</button></th>\r\n                  <th><button type=\"button\" onClick={this.sortHandler('phone')} className={\r\n                    this.state.sortedBy['phone'].selected ?\r\n                      this.state.sortedBy['phone'].selected && !this.state.sortedBy['phone'].inc ?\r\n                        'active up'\r\n                          :\r\n                            'active'\r\n                              :\r\n                                null\r\n                    }>phone {this.arrowIcon()}</button></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {\r\n                  chunkData.length > 0 ?\r\n                    chunkData[this.state.activePage - 1].map((el, i) => (\r\n                      <tr key={i} onClick={this.rowHandler(i)} className={this.state.rowCurrent === i ? 'current' : null }>\r\n                        <td>{el.id}</td>\r\n                        <td>{el.firstName}</td>\r\n                        <td>{el.lastName}</td>\r\n                        <td>{el.email}</td>\r\n                        <td>{el.phone}</td>\r\n                      </tr>\r\n                    ))\r\n                  :\r\n                    null\r\n                }\r\n              </tbody>\r\n            </table>\r\n            {\r\n              data.length > this.state.itemsCountPerPage ?\r\n                <Pagination\r\n                  activePage={this.state.activePage}\r\n                  itemsCountPerPage={this.state.itemsCountPerPage}\r\n                  totalItemsCount={this.state.totalItemsCount}\r\n                  pageRangeDisplayed={this.state.pageRangeDisplayed}\r\n                  onChange={this.handlePageChange}\r\n                  itemClass=\"pagination__item\"\r\n                  linkClass=\"pagination__link\"\r\n                  activeLinkClass=\"pagination__current\"\r\n                />\r\n                :\r\n                null\r\n            }\r\n          </div>\r\n          {\r\n            this.state.isModal ?\r\n              <div className=\"modal\">\r\n                <div  className=\"modalOverflow\" onClick={this.closeModal}/>\r\n                <form className=\"form\" onSubmit={e => e.preventDefault()}>\r\n                  <fieldset className=\"fieldset\">\r\n                    <label>\r\n                      id \r\n                      <input type=\"number\" name=\"id\" onChange={this.handlerAddField('id')} value={this.state.userTemplate.id ? this.state.userTemplate.id : ''}/>\r\n                    </label>\r\n                    <label>\r\n                      firstName \r\n                      <input type=\"text\" name=\"firstName\" onChange={this.handlerAddField('firstName')} value={this.state.userTemplate.firstName ? this.state.userTemplate.firstName : ''}/>\r\n                    </label>\r\n                    <label>\r\n                      lastName \r\n                      <input type=\"text\" name=\"lastName\" onChange={this.handlerAddField('lastName')} value={this.state.userTemplate.lastName ? this.state.userTemplate.lastName : ''}/>\r\n                    </label>\r\n                    <label>\r\n                      email \r\n                      <input type=\"text\" name=\"email\" onChange={this.handlerAddField('email')} value={this.state.userTemplate.email ? this.state.userTemplate.email : ''}/>\r\n                    </label>\r\n                    <label>\r\n                      phone \r\n                      <input type=\"text\" name=\"phone\" onChange={this.handlerAddField('phone')} value={this.state.userTemplate.phone ? this.state.userTemplate.phone : ''}/>\r\n                    </label>\r\n                    <label>\r\n                      streetAddress\r\n                      <input type=\"text\" name=\"streetAddress\" onChange={this.handlerAddAdressField('streetAddress')} value={this.state.userTemplate.address.streetAddress ? this.state.userTemplate.address.streetAddress : ''}/>\r\n                    </label>\r\n                    <label>\r\n                      city\r\n                      <input type=\"text\" name=\"city\" onChange={this.handlerAddAdressField('city')} value={this.state.userTemplate.address.city ? this.state.userTemplate.address.city : ''}/>\r\n                    </label>\r\n                    <label>\r\n                      state\r\n                      <input type=\"text\" name=\"state\" onChange={this.handlerAddAdressField('state')} value={this.state.userTemplate.address.state ? this.state.userTemplate.address.state : ''}/>\r\n                    </label>\r\n                    <label>\r\n                      zip\r\n                      <input type=\"text\" name=\"zip\" onChange={this.handlerAddAdressField('zip')} value={this.state.userTemplate.address.zip ? this.state.userTemplate.address.zip : ''}/>\r\n                    </label>\r\n                    <label>\r\n                      description\r\n                      <input type=\"text\" name=\"description\" onChange={this.handlerAddField('description')} value={this.state.userTemplate.description ? this.state.userTemplate.description : ''}/>\r\n                    </label>\r\n                  </fieldset>\r\n                  <div className=\"modal__buttons\">\r\n                    <button type=\"submit\" className=\"btn btn--primary\" onClick={this.addUserHandler} disabled={!this.state.isValid } >Добавить в таблицу</button>\r\n                  </div>\r\n                </form>\r\n              </div> :\r\n                null\r\n          }\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}