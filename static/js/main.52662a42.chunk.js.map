{"version":3,"sources":["component/Self/images/1.png","component/Self/Self.js","Loader.js","component/Data-table/Data-table.js","component/Basket/Item.js","component/Basket/Header.js","component/Basket/Checkout.js","component/Basket/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Self","react_default","a","createElement","className","react_router_dom","to","src","_one","alt","Loader","DataTable","state","data","copyData","firstVisit","loader","sortedBy","id","inc","selected","firstName","lastName","email","phone","activeSorting","searchTerm","selectedUsers","rowCurrent","isModal","isValid","userTemplate","address","streetAddress","city","zip","description","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","intro","many","manyFile","small","smallFile","onSubmit","e","preventDefault","type","onClick","_this","getDataUsers","count","setState","response","length","error","console","log","filterHandler","newData","filter","el","String","toLowerCase","indexOf","target","value","decrementSorting","arTypeData","Object","toConsumableArray","sort","b","sortingIncrement","sortHandler","_objectSpread2","objectSpread","defineProperty","rowHandler","index","removeSelectUser","showModal","closeModal","handlerAddAdressField","name","handlerAddField","addUserHandler","concat","arrowIcon","width","height","enableBackground","version","viewBox","xmlns","d","handlePageChange","pageNumber","that","this","document","addEventListener","keyCode","_this2","_this$state","chunkData","_","chunk","src_Loader","onChange","map","i","key","readOnly","Pagination_default","itemClass","linkClass","activeLinkClass","disabled","React","Component","Item","_ref","_ref$events","events","handleBlur","dec","handleChange","removeItem","DETAIL_PICTURE_SRC","FULL_PRICE","ID","MEASURE_NAME","NAME","PROPERTY_CML2_ARTICLE_VALUE","PROPERTY_KRATNOST_UPAKOVKI_VALUE","QUANTITY","SUM","AVAILABLE_QUANTITY","DETAIL_PAGE_URL","DISCOUNT_PRICE","QUANTITY_RS","PROPS_ALL","buttonClass","classnames","quantity__button","quantity__button--minus","js-quantity__button--minus","data-id","href","parseInt","VALUE","pattern","min","max","tabIndex","onBlur","Header","clearBasket","Checkout","n","_ref$data","sumNumber","discount","BasketApp","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","assertThisInitialized","items","badge","itemPrice","PRICE","isEmpty","keys","Math","floor","sum","minValue","updateValue","newCount","Number","renderItems","TransitionGroup","component","CSSTransition","classNames","timeout","Basket_Item","BASKET_DATA","GRID","ROWS","BASKET_ITEMS_COUNT","allSum_FORMATED","allSum","DISCOUNT_PRICE_ALL","EMPTY_BASKET","action","Basket_Header","Basket_Checkout","App","react_router","path","exact","Basket","Boolean","window","location","hostname","match","app","src_App_0","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.52662a42.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.06376fa8.png\";","import React from 'react';\r\nimport _one from './images/1.png';\r\nimport './style.scss';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Self = () => {\r\n  return (\r\n    <div className=\"self\">\r\n      <div className=\"self__header\">\r\n        <h1 className=\"self__title\">Компоненты</h1>\r\n      </div>\r\n      <div className=\"self__content\">\r\n        <div className=\"self__list selfList\">\r\n          <NavLink to=\"/DataTable\" className=\"self__item selfItem\">\r\n            <div className=\"selfItem__contains\">\r\n              <figure className=\"selfItem__figure\">\r\n                <img className=\"selfItem__image\" src={_one} alt=\"Submit\" />\r\n              </figure>\r\n              <div className=\"selfItem__content\">\r\n                <span className=\"selfItem__name\">\r\n                  React-приложение для отображения таблицы с данными.\r\n                </span>\r\n                <div className=\"selfItem__desc\">\r\n                  <p className=\"selfItem__descCaption\">\r\n                    Функционал\r\n                  </p>\r\n                  <ul className=\"selfItem__list list\">\r\n                    <li className=\"list__item\">Сортировка по столбцам.</li>\r\n                    <li className=\"list__item\">Клиентская пагинация</li>\r\n                    <li className=\"list__item\">Фильтрация</li>\r\n                    <li className=\"list__item\">По клике на строку таблицы значения полей выводятся в дополнительном блоке.</li>\r\n                    <li className=\"list__item\">Кнопка добавить, по нажатии на которую выпадает форма добавления ряда</li>\r\n                    <li className=\"list__item\">После заполнения всех инпутов активируется кнопка Добавить в таблицу которая вставляет заполненный ряд в начало таблицы</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </NavLink>\r\n          <NavLink to=\"/Basket\" className=\"self__item selfItem\">\r\n            <div className=\"selfItem__contains\">\r\n              <div className=\"selfItem__content\">\r\n                <span className=\"selfItem__name\">\r\n                  basket\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </NavLink>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Self;","import React from 'react';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <div className=\"lds-ripple\">\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader;","import _ from 'lodash';\r\nimport React from 'react';\r\nimport Loader from './../../Loader';\r\nimport Pagination from \"react-js-pagination\";\r\nimport manyFile from \"./../../data/many\";\r\nimport smallFile from \"./../../data/small\";\r\n\r\nclass DataTable extends React.Component {\r\n  state = {\r\n    data : [],\r\n    copyData: [],\r\n    firstVisit: true,\r\n    loader: true,\r\n    sortedBy: {\r\n      id : {\r\n        inc : false,\r\n        selected : false,\r\n      },\r\n      firstName : {\r\n        inc: false,\r\n        selected: false,\r\n      },\r\n      lastName : {\r\n        inc: false,\r\n        selected: false,\r\n      },\r\n      email : {\r\n        inc: false,\r\n        selected: false,\r\n      },\r\n      phone : {\r\n        inc: false,\r\n        selected: false,\r\n      },\r\n    },\r\n    activeSorting: '', \r\n    searchTerm: '',\r\n    selectedUsers: [],\r\n    rowCurrent: null,\r\n    isModal: false,\r\n    isValid: false,\r\n    userTemplate: {\r\n      id: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      address: {\r\n        streetAddress: '',\r\n        city: '',\r\n        state: '',\r\n        zip: ''\r\n      },\r\n      description: '',\r\n    },\r\n    activePage: 1,\r\n    itemsCountPerPage: 50,\r\n    totalItemsCount: null,\r\n    pageRangeDisplayed: 5,\r\n  }\r\n\r\n  intro = () => {\r\n    // const many = 'http://www.filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}';\r\n    // const small = 'http://www.filltext.com/?rows=32&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D';\r\n    const many = manyFile;\r\n    const small = smallFile;\r\n    return (\r\n      <form className=\"intro\" onSubmit={e => e.preventDefault()}>\r\n        <span className=\"intro__title\">\r\n          Выберите объем данных\r\n        </span>\r\n        <div className=\"intro__buttons\">\r\n          <button type=\"sumbit\" className=\"intro__btn btn btn--primary\" onClick={() => this.getDataUsers(small)}>Маленький ({this.state.itemsCountPerPage})</button>\r\n          <button type=\"sumbit\" className=\"intro__btn btn btn--primary\" onClick={() => this.getDataUsers(many)}>Большой (1000)</button>\r\n        </div>\r\n      </form>\r\n    )\r\n\r\n  }\r\n  //getDataUsers = async (count) =>\r\n  getDataUsers = (count) => {\r\n    this.setState({\r\n      firstVisit: false,\r\n    });\r\n    try {\r\n      // const response = await axios.get(count, {\r\n      //   'Access-Control-Allow-Origin': 'http://www.filltext.com'\r\n      // });\r\n      const response = {\r\n        data: count\r\n      }\r\n\r\n      this.setState({\r\n        data: response.data,\r\n        copyData: response.data,\r\n        loader: false,\r\n        totalItemsCount: response.data.length > this.state.itemsCountPerPage ? response.data.length : null,\r\n      });\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const that = this;\r\n    document.addEventListener('keydown', function(e) {\r\n      const escape = 27;\r\n      if (e.keyCode === escape && that.state.isModal) {\r\n        that.setState({\r\n          isModal: false,\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  filterHandler = (e) => {\r\n    const { copyData } = this.state;\r\n    const newData = copyData.filter(el => {\r\n      if (String(el.id).toLowerCase().indexOf(e.target.value.toLowerCase()) !== -1) {\r\n        return true\r\n      }\r\n      if (el.firstName.toLowerCase().indexOf(e.target.value.toLowerCase()) !== -1) {\r\n        return true\r\n      }\r\n      if (el.lastName.toLowerCase().indexOf(e.target.value.toLowerCase()) !== -1) {\r\n        return true\r\n      }\r\n      if (el.email.toLowerCase().indexOf(e.target.value.toLowerCase()) !== -1) {\r\n        return true\r\n      }\r\n      if (el.phone.toLowerCase().indexOf(e.target.value.toLowerCase()) !== -1) {\r\n        return true\r\n      }\r\n      return false;\r\n    })\r\n    this.setState({\r\n      searchTerm: e.target.value,\r\n      data: newData,\r\n      activePage: 1,\r\n      selectedUsers: [],\r\n      rowCurrent: null,\r\n      sortedBy: {\r\n        id: {\r\n          inc: false,\r\n          selected: false,\r\n        },\r\n        firstName: {\r\n          inc: false,\r\n          selected: false,\r\n        },\r\n        lastName: {\r\n          inc: false,\r\n          selected: false,\r\n        },\r\n        email: {\r\n          inc: false,\r\n          selected: false,\r\n        },\r\n        phone: {\r\n          inc: false,\r\n          selected: false,\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  decrementSorting = (type) => {\r\n    const arTypeData = [...this.state.data];\r\n    arTypeData.sort((a, b) => {\r\n      if (a[type] > b[type]) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n\r\n    this.setState({\r\n      data: arTypeData\r\n    })\r\n  }\r\n\r\n  sortingIncrement = (type) => {\r\n    const arTypeData = [...this.state.data];\r\n    arTypeData.sort((a, b) => {\r\n      if (a[type] < b[type]) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n\r\n    this.setState({\r\n      data: arTypeData\r\n    })\r\n  }\r\n\r\n  sortHandler = type => () => {\r\n    if (this.state.data.length < 3) {\r\n      return;\r\n    }\r\n\r\n    const { activeSorting } = this.state;\r\n    if (activeSorting !== '' && activeSorting !== type) {\r\n      this.setState({\r\n        activeSorting: type,\r\n        sortedBy: {\r\n          ...this.state.sortedBy,\r\n          [this.state.activeSorting]: {\r\n            selected: false,\r\n            inc: false,\r\n          },\r\n          [type]: {\r\n            ...this.state.sortedBy[type],\r\n            selected: true,\r\n            inc: true,\r\n          }\r\n        },\r\n      }, () => {\r\n        this.sortingIncrement(type);\r\n      });\r\n      return;\r\n    }\r\n    this.setState({\r\n      activeSorting: type,\r\n      sortedBy: {\r\n        ...this.state.sortedBy,\r\n        [type]: {\r\n          ...this.state.sortedBy[type],\r\n          selected: true,\r\n          inc: !this.state.sortedBy[type].inc,\r\n        }\r\n      }\r\n    }, () => {\r\n        this.state.sortedBy[type].inc ? this.sortingIncrement(type) : this.decrementSorting(type)\r\n    });\r\n  }\r\n\r\n  rowHandler = (index) => () => {\r\n    this.setState({\r\n      selectedUsers: [this.state.data[index]],\r\n      rowCurrent: index,\r\n    })\r\n  }\r\n\r\n  removeSelectUser = () => {\r\n    this.setState({\r\n      selectedUsers: [],\r\n      rowCurrent: null,\r\n    })\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      isModal: true,\r\n    })\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.setState({\r\n      isModal: false,\r\n    })\r\n  }\r\n\r\n  handlerAddAdressField = name => e => {\r\n    const { userTemplate } = this.state;\r\n    this.setState({\r\n      userTemplate: {\r\n        ...userTemplate,\r\n        address: {\r\n          ...userTemplate.address,\r\n          [name]: e.target.value,\r\n        }\r\n      }\r\n    }, () => {\r\n      this.setState({\r\n        isValid: this.isValid()\r\n      })\r\n    })\r\n  }\r\n\r\n  handlerAddField = name => e => {\r\n    const { userTemplate } = this.state;\r\n    this.setState({\r\n      userTemplate: {\r\n        ...userTemplate,\r\n        [name]: e.target.value,\r\n      }\r\n    }, () => {\r\n      this.setState({\r\n        isValid: this.isValid()\r\n      })\r\n    });\r\n\r\n  } \r\n\r\n  isValid = (e) => {\r\n    const { userTemplate } = this.state;\r\n    const { address } = this.state.userTemplate;\r\n\r\n    if (address.city === '') {\r\n      return false;\r\n    }\r\n    if (address.state === '') {\r\n      return false;\r\n    }\r\n    if (address.streetAddress === '') {\r\n      return false;\r\n    }\r\n    if (address.zip === '') {\r\n      return false;\r\n    }\r\n    if (userTemplate.id === '') {\r\n      return false;\r\n    }\r\n    if (userTemplate.description === '') {\r\n      return false;\r\n    }\r\n    if (userTemplate.email === '') {\r\n      return false;\r\n    }\r\n    if (userTemplate.firstName === '') {\r\n      return false;\r\n    }\r\n    if (userTemplate.lastName === '') {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  addUserHandler = () => {\r\n    const { userTemplate } = this.state;\r\n\r\n    this.setState({\r\n      data: [{...userTemplate}, ...this.state.data],\r\n      copyData: [{ ...userTemplate }, ...this.state.copyData],\r\n      isModal: false,\r\n      userTemplate: {\r\n        id: null,\r\n        firstName: null,\r\n        lastName: null,\r\n        email: null,\r\n        address: {\r\n          streetAddress: null,\r\n          city: null,\r\n          state: null,\r\n          zip: null\r\n        },\r\n        description: null,\r\n      }\r\n    })\r\n  }\r\n\r\n  arrowIcon = () => {\r\n    return (\r\n      <svg width=\"10px\" height=\"10px\" enableBackground=\"new 0 0 292.362 292.362\" version=\"1.1\" viewBox=\"0 0 292.362 292.362\"  xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"m286.94 69.377c-3.614-3.617-7.898-5.424-12.848-5.424h-255.81c-4.952 0-9.233 1.807-12.85 5.424-3.617 3.621-5.424 7.902-5.424 12.851 0 4.948 1.807 9.229 5.424 12.847l127.91 127.91c3.621 3.617 7.902 5.428 12.85 5.428s9.233-1.811 12.847-5.428l127.91-127.91c3.613-3.617 5.427-7.898 5.427-12.847 0-4.948-1.814-9.229-5.427-12.85z\"/>\r\n      </svg>\r\n    )\r\n  }\r\n\r\n  handlePageChange = (pageNumber) => {\r\n    this.setState({ activePage: pageNumber });\r\n  }\r\n\r\n  render() {\r\n    const { data, copyData, itemsCountPerPage, loader, firstVisit, selectedUsers } = this.state;\r\n    const chunkData = _.chunk(data, itemsCountPerPage);\r\n\r\n    if (firstVisit) {\r\n      return (\r\n        this.intro()\r\n      )\r\n    }\r\n\r\n    if (loader) {\r\n      return (\r\n        <Loader />\r\n      )\r\n    }\r\n\r\n    if (data.length === 0 && copyData.length === 0) {\r\n      return (\r\n        <div>Нет данных</div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"users\">\r\n          <div className=\"users__head\">\r\n            <button type=\"button\" className=\"users__addButton btn btn--info\" onClick={this.showModal}>Добавить пользователя</button>\r\n            <div>\r\n              Фильтровать по: <input type=\"text\" onChange={this.filterHandler} value={this.state.searchTerm} />\r\n            </div>\r\n          </div>\r\n          <div className=\"users__side\">\r\n\r\n            {\r\n              selectedUsers.length > 0 ?\r\n                selectedUsers.map((el, i) => (\r\n                  <div key={i} onClick={this.removeSelectUser} className=\"selectedUser\">\r\n                    <div className=\"selectedUser__group\">\r\n                      Выбран пользователь <b>{el.firstName}</b>\r\n                    </div>\r\n                    <div className=\"selectedUser__group\">\r\n                      <div>Описание:</div>\r\n                      <textarea value={el.description} readOnly></textarea>\r\n                    </div>\r\n                    <div className=\"selectedUser__group\">\r\n                      Адрес проживания: <b>{el.address.streetAddress}</b>\r\n                    </div>\r\n                    <div className=\"selectedUser__group\">\r\n                      Город: <b>{el.address.city}</b>\r\n                    </div>\r\n                    <div className=\"selectedUser__group\">\r\n                      Провинция/штат: <b>{el.address.state}</b>\r\n                    </div>\r\n                    <div className=\"selectedUser__group\">\r\n                      Индекс: <b>{el.address.zip}</b>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n                :\r\n                <span className=\"users__sideTitle\">Пользователь не выбран</span>\r\n            }\r\n          </div>\r\n          <div className=\"users__content\">\r\n            <table className=\"users__table table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>\r\n                    <button type=\"button\" onClick={this.sortHandler('id')} className={\r\n                      this.state.sortedBy['id'].selected ?\r\n                        this.state.sortedBy['id'].selected && !this.state.sortedBy['id'].inc ?\r\n                          'active up'\r\n                            :\r\n                              'active'\r\n                                :\r\n                                  null\r\n                    }>ID {this.arrowIcon()}\r\n                    </button>\r\n                    </th>\r\n                    <th><button type=\"button\" onClick={this.sortHandler('firstName')} className={\r\n                      this.state.sortedBy['firstName'].selected ?\r\n                        this.state.sortedBy['firstName'].selected && !this.state.sortedBy['firstName'].inc ?\r\n                          'active up'\r\n                            :\r\n                              'active'\r\n                                :\r\n                                  null\r\n                      }>firstName {this.arrowIcon()}</button>\r\n                    </th>\r\n                    <th><button type=\"button\" onClick={this.sortHandler('lastName')} className={\r\n                      this.state.sortedBy['lastName'].selected ?\r\n                        this.state.sortedBy['lastName'].selected && !this.state.sortedBy['lastName'].inc ?\r\n                          'active up'\r\n                            :\r\n                              'active'\r\n                                :\r\n                                  null\r\n                      }>lastName {this.arrowIcon()}</button>\r\n                    </th>\r\n                    <th><button type=\"button\" onClick={this.sortHandler('email')} className={\r\n                      this.state.sortedBy['email'].selected ?\r\n                        this.state.sortedBy['email'].selected && !this.state.sortedBy['email'].inc ?\r\n                          'active up'\r\n                            :\r\n                              'active'\r\n                                :\r\n                                  null\r\n                      }>email {this.arrowIcon()}</button>\r\n                    </th>\r\n                    <th><button type=\"button\" onClick={this.sortHandler('phone')} className={\r\n                      this.state.sortedBy['phone'].selected ?\r\n                        this.state.sortedBy['phone'].selected && !this.state.sortedBy['phone'].inc ?\r\n                          'active up'\r\n                            :\r\n                              'active'\r\n                                :\r\n                                  null\r\n                      }>phone {this.arrowIcon()}</button>\r\n                    </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {\r\n                  chunkData.length > 0 ?\r\n                    chunkData[this.state.activePage - 1].map((el, i) => (\r\n                      <tr key={i} onClick={this.rowHandler(i)} className={this.state.rowCurrent === i ? 'current' : null }>\r\n                        <td>{el.id}</td>\r\n                        <td>{el.firstName}</td>\r\n                        <td>{el.lastName}</td>\r\n                        <td>{el.email}</td>\r\n                        <td>{el.phone}</td>\r\n                      </tr>\r\n                    ))\r\n                  :\r\n                    null\r\n                }\r\n              </tbody>\r\n            </table>\r\n            {\r\n              data.length > this.state.itemsCountPerPage ?\r\n                <Pagination\r\n                  activePage={this.state.activePage}\r\n                  itemsCountPerPage={this.state.itemsCountPerPage}\r\n                  totalItemsCount={this.state.totalItemsCount}\r\n                  pageRangeDisplayed={this.state.pageRangeDisplayed}\r\n                  onChange={this.handlePageChange}\r\n                  itemClass=\"pagination__item\"\r\n                  linkClass=\"pagination__link\"\r\n                  activeLinkClass=\"pagination__current\"\r\n                />\r\n                :\r\n                null\r\n            }\r\n          </div>\r\n          {\r\n            this.state.isModal ?\r\n              <div className=\"modal\">\r\n                <div  className=\"modalOverflow\" onClick={this.closeModal}/>\r\n                <form className=\"form\" onSubmit={e => e.preventDefault()}>\r\n                  <fieldset className=\"fieldset\">\r\n                    <label>\r\n                      id \r\n                      <input type=\"number\" name=\"id\" onChange={this.handlerAddField('id')} value={this.state.userTemplate.id}/>\r\n                    </label>\r\n                    <label>\r\n                      firstName \r\n                      <input type=\"text\" name=\"firstName\" onChange={this.handlerAddField('firstName')} value={this.state.userTemplate.firstName}/>\r\n                    </label>\r\n                    <label>\r\n                      lastName \r\n                      <input type=\"text\" name=\"lastName\" onChange={this.handlerAddField('lastName')} value={this.state.userTemplate.lastName}/>\r\n                    </label>\r\n                    <label>\r\n                      email \r\n                      <input type=\"text\" name=\"email\" onChange={this.handlerAddField('email')} value={this.state.userTemplate.email}/>\r\n                    </label>\r\n                    <label>\r\n                      phone \r\n                      <input type=\"text\" name=\"phone\" onChange={this.handlerAddField('phone')} value={this.state.userTemplate.phone}/>\r\n                    </label>\r\n                    <label>\r\n                      streetAddress\r\n                      <input type=\"text\" name=\"streetAddress\" onChange={this.handlerAddAdressField('streetAddress')} value={this.state.userTemplate.address.streetAddress}/>\r\n                    </label>\r\n                    <label>\r\n                      city\r\n                      <input type=\"text\" name=\"city\" onChange={this.handlerAddAdressField('city')} value={this.state.userTemplate.address.city}/>\r\n                    </label>\r\n                    <label>\r\n                      state\r\n                      <input type=\"text\" name=\"state\" onChange={this.handlerAddAdressField('state')} value={this.state.userTemplate.address.state}/>\r\n                    </label>\r\n                    <label>\r\n                      zip\r\n                      <input type=\"text\" name=\"zip\" onChange={this.handlerAddAdressField('zip')} value={this.state.userTemplate.address.zip}/>\r\n                    </label>\r\n                    <label>\r\n                      description\r\n                      <input type=\"text\" name=\"description\" onChange={this.handlerAddField('description')} value={this.state.userTemplate.description}/>\r\n                    </label>\r\n                  </fieldset>\r\n                  <div className=\"modal__buttons\">\r\n                    <button type=\"submit\" className=\"btn btn--primary\" onClick={this.addUserHandler} disabled={!this.state.isValid } >Добавить в таблицу</button>\r\n                  </div>\r\n                </form>\r\n              </div> :\r\n                null\r\n          }\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default DataTable;","import React from \"react\";\r\nimport classnames from 'classnames';\r\n\r\nconst Item = ({ data, events = {} }) => {\r\n\tconst { handleBlur, dec, inc, handleChange, removeItem } = events;\r\n\tconst {\r\n\t\tDETAIL_PICTURE_SRC,\r\n\t\tFULL_PRICE, \r\n\t\tID,\r\n\t\tMEASURE_NAME,\r\n\t\tNAME,\r\n\t\tPROPERTY_CML2_ARTICLE_VALUE,\r\n\t\tPROPERTY_KRATNOST_UPAKOVKI_VALUE,\r\n\t\tQUANTITY,\r\n\t\tSUM, \r\n\t\tAVAILABLE_QUANTITY,\r\n\t\tDETAIL_PAGE_URL, \r\n\t\tDISCOUNT_PRICE,\r\n\t\tPROPS_ALL,\r\n\r\n\t} = data;\r\n\tconst { QUANTITY_RS } = PROPS_ALL\r\n\tconst buttonClass = classnames({\r\n\t\t'quantity__button': true,\r\n\t\t'quantity__button--minus': true,\r\n\t\t'js-quantity__button--minus': true,\r\n\t\t'disabled': (QUANTITY - 1) <= 0 ? true : false,\r\n\t})\r\n\treturn (\r\n\t\t<article className=\"basket__item box js-basket__item\" data-id={ID}>\r\n\t\t   <div className=\"box__container\">\r\n\t\t      <div className=\"box__prewiev\">\r\n\t\t\t\t\t\t<a href={DETAIL_PAGE_URL} className=\"box__figure\">\r\n\t\t          <img \r\n\t\t\t\t\t\t\tsrc={DETAIL_PICTURE_SRC ? DETAIL_PICTURE_SRC : 'include/No_photo.svg'}\r\n\t\t\t\t\t\t\talt={NAME}\r\n\t\t          className=\"box__image\" />\r\n\t\t         </a>\r\n\t\t      </div>\r\n\t\t      <div className=\"box__name\">\r\n\t\t\t\t\t\t<a href={DETAIL_PAGE_URL} className=\"box__nameLink\">\r\n\t\t\t\t\t\t\t{NAME}\r\n\t\t        </a>\r\n\t\t      </div>\r\n\t\t\t\t\t<span className=\"box__vendorCode\">{PROPERTY_CML2_ARTICLE_VALUE}</span>\r\n\t\t      <div className=\"box__detail\">\r\n\t\t         <ul className=\"box__presence\">\r\n\t\t            <li className=\"box__presenceItem box__presenceItem--availability\">\r\n\t\t\t\t\t\t\t\t\tВ наличии: {AVAILABLE_QUANTITY < 0 ? 0 : AVAILABLE_QUANTITY} {MEASURE_NAME}\t\t\t\t\t\t\t\t\t\t\r\n\t\t            </li>\r\n\t\t            <li className=\"box__presenceItem box__presenceItem--order\">\r\n\t\t\t\t\t\t\t\t\tНа заказ: {parseInt(QUANTITY_RS.VALUE, 10) > 0 ? parseInt(QUANTITY_RS.VALUE, 10) : 0} {MEASURE_NAME}\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t            </li>\r\n\t\t         </ul>\r\n\t\t         <div className=\"box__multiplicity\">\r\n\t\t            <div className=\"box__multiplicityItem\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"box__multiplicityKey\">Крат. упак</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"box__multiplicityValue\">{PROPERTY_KRATNOST_UPAKOVKI_VALUE}</span>\r\n\t\t            </div>\r\n\t\t            <div className=\"box__multiplicityItem\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"box__multiplicityKey\">Ед. изм</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"box__multiplicityValue\">{MEASURE_NAME}</span>\r\n\t\t            </div>\r\n\t\t         </div>\r\n\t\t         <div className=\"box__cost\">\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tDISCOUNT_PRICE > 0 ?\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"box__oldPrice\">\r\n\t\t\t\t\t\t\t\t\t\t\t{/* {BX.util.number_format(FULL_PRICE, 2, '.', \" \") + ' р'} */}\r\n\t\t\t\t\t\t\t\t\t\t\t{FULL_PRICE}\r\n\t\t\t\t\t\t\t\t\t\t</span>\t\r\n\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t\tnull \r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t<span className=\"box__price\">\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t// BX.util.number_format(DISCOUNT_PRICE > 0 ? FULL_PRICE - DISCOUNT_PRICE : FULL_PRICE, 2, '.', \" \") + ' р'\r\n\t\t\t\t\t\t\t\t\t\tDISCOUNT_PRICE > 0 ? FULL_PRICE - DISCOUNT_PRICE : FULL_PRICE\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t         </div>\r\n\t\t         <div className=\"box__quantity quantity\">\r\n\t\t\t\t\t\t\t<button className={buttonClass} onClick={dec(ID, `QUANTITY_${ID}`)}></button>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\ttype=\"number\" \r\n\t\t\t\t\t\t\t\tname={`QUANTITY_${ID}`} \r\n\t\t\t\t\t\t\t\tclassName=\"quantity__input js-quantity__input\" \r\n\t\t\t\t\t\t\t\tvalue={QUANTITY} pattern=\"[0-9]*\" min=\"1\" max=\"999999999\"\r\n\t\t\t\t\t\t\t\ttabIndex=\"0\"\r\n\t\t\t\t\t\t\t\tonChange={handleChange(ID)}\r\n\t\t\t\t\t\t\t\tonBlur={handleBlur(ID)} />\r\n\t\t            <button className=\"\r\n\t\t               quantity__button \r\n\t\t               quantity__button--plus \r\n\t\t               js-quantity__button--plus\r\n\t\t               \"\r\n\t\t\t\t\t\t\tonClick={inc(ID, `QUANTITY_${ID}`)}></button>\r\n\t\t         </div>\r\n\t\t         <div className=\"box__summ\">\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tDISCOUNT_PRICE > 0 ?\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"box__oldPrice\">\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t// BX.util.number_format(FULL_PRICE, 2, '.', \" \") + ' р'\r\n\t\t\t\t\t\t\t\t\t\t\t\tFULL_PRICE\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t}\r\n\t\t            <span className=\"box__price\">\r\n\t\t\t\t\t\t\t\t\t{SUM}\r\n\t\t            </span>\r\n\t\t         </div>\r\n\t\t\t\t\t\t<a href=\"javascript:void(0);\" className=\"box__removeLink \" data-id={ID} onClick={() => removeItem(ID) }>Удалить</a>\r\n\t\t      </div>\r\n\t\t   </div>\r\n\t\t</article>\r\n  )\r\n}\r\n\r\nexport default Item;","import React from \"react\";\r\n\r\nconst Header = ({ events: { clearBasket}}) => {\r\n  return (\r\n    <div className=\"basket__head\">\r\n      <span className=\"basket__title\">Состав заказа:</span>\r\n      <div className=\"basket__row\">\r\n        <span className=\"basket__colName\">Наименование</span>\r\n        <span className=\"basket__colPrice\">Цена</span>\r\n        <span className=\"basket__colNumber\">Колличество</span>\r\n        <span className=\"basket__colSumm\">Сумма</span>\r\n      </div>\r\n      <button type=\"button\" onClick={() => clearBasket()} className=\"basket__clearBtn clearBasket js-clearBasket\" name=\"button\">\r\n        Очистить корзину\r\n        <span className=\"clearBasket__close\"></span>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nconst declOfNum = (n, titles) => {\r\n  return titles[(n % 10 === 1 && n % 100 !== 11) ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2]\r\n}\r\n\r\nconst Checkout = ({ data: { count, sumNumber, discount} }) => {\r\n  return (\r\n    <div className=\"checkoutOrder\">\r\n      <div className=\"checkoutOrder__container\">\r\n        <div className=\"checkoutOrder__item\">\r\n          <ul className=\"checkoutOrder__list\">\r\n            <li className=\"checkoutOrder__listItem\">\r\n              <span className=\"checkoutOrder__listKey\">\r\n                <span className=\"js-countItem\">{count} {declOfNum(count, ['товар', 'товара', 'товаров'])} </span>\r\n                на сумму\r\n\t\t\t\t\t\t\t\t\t</span>\r\n              <span className=\"checkoutOrder__listValue js-basketSum\">\r\n                <span className=\"checkoutOrder__price\">\r\n                  {/* { BX.util.number_format(discount > 0 ? sumNumber + discount : sumNumber, 2, '.', \" \") + ' р' } */}\r\n                  { discount > 0 ? sumNumber + discount : sumNumber }\r\n                </span>\r\n              </span>\r\n            </li>\r\n            {\r\n              discount > 0 ?\r\n                <li className=\"checkoutOrder__listItem checkoutOrder__listItem--discount\">\r\n                  <span className=\"checkoutOrder__listKey\">Скидка</span>\r\n                  <span className=\"checkoutOrder__listValue\">\r\n                    <span className=\"checkoutOrder__oldPrice\">\r\n                      {/* {BX.util.number_format(discount, 2, '.', \" \") + ' р'} */}\r\n                      {discount}\r\n                    </span>\r\n                  </span>\r\n                </li>\r\n                : null\r\n            }\r\n          </ul>\r\n          <div className=\"checkoutOrder__total\">\r\n            <span className=\"checkoutOrder__totalText\">К оплате:</span>\r\n            <span className=\"checkoutOrder__totalPrice js-basketSumResult\">\r\n              {/* {BX.util.number_format(sumNumber, 2, '.', \" \") + ' р'} */}\r\n              {sumNumber}\r\n            </span>\r\n          </div>\r\n          <div className=\"checkoutOrder__warning\">\r\n          </div>\r\n          <button className=\"checkoutOrder__button js-BtnBasketOK\" type=\"submit\">Оформить заказ</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Checkout;","import React from \"react\";\n// import signedParams from './signedParams';\nimport './style.scss';\nimport Item from './Item';\nimport Header from './Header';\nimport Checkout from './Checkout';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport data from './../../data/basket'\n\nclass BasketApp extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\n\tremoveItem = (id) => {\n\t\tconst self = this;\n\n\t\tconst { items, badge } = this.state;\n\t\tconst itemPrice = items[id].PRICE;\n\t\tdelete items[id];\n\n\t\tthis.setState({\n\t\t\titems,\n\t\t\tisEmpty: Object.keys(items).length === 0 ? true : false,\n\t\t\tbadge: {\n\t\t\t\tcount: Object.keys(items).length,\n\t\t\t\tsumNumber: Math.floor(badge.sumNumber - itemPrice),\n\t\t\t\tsum: Math.floor(badge.sumNumber - itemPrice),\n\t\t\t}\n\t\t// \t\t\tbadge: {\n\t\t// \t\t\t\tcount: response.BASKET_DATA.BASKET_ITEMS_COUNT,\n\t\t// \t\t\t\tsum: response.BASKET_DATA.allSum_FORMATED,\n\t\t// \t\t\t\tsumNumber: response.BASKET_DATA.allSum,\n\t\t// \t\t\t},\n\t\t})\n\t\t// const prepareData = [\n\t\t// \t{ name: 'via_ajax', value: 'Y' },\n\t\t// \t{ name: 'SITE_ID', value: \"s1\" },\n\t\t// \t{ name: 'sessid', value: BX.bitrix_sessid() },\n\t\t// \t{ name: 'signedParamsString', value: signedParams },\n\t\t// \t{ name: 'basketAction', value: 'recalculateAjax' },\n\t\t// \t{ name: `basket[DELETE_${id}]`, value: 'Y' },\n\t\t// ];\n\n\t\t// $.ajax({\n\t\t// \ttype: 'POST',\n\t\t// \tdata: prepareData,\n\t\t// \turl: '/bitrix/components/bitrix/sale.basket.basket/ajax.php',\n\t\t// \tsuccess: function (response) {\n\t\t// \t\tself.setState({\n\t\t// \t\t\titems: { ...response.BASKET_DATA.GRID.ROWS },\n\t\t// \t\t\tisEmpty: response.BASKET_DATA.EMPTY_BASKET,\n\t\t// \t\t\tbadge: {\n\t\t// \t\t\t\tcount: response.BASKET_DATA.BASKET_ITEMS_COUNT,\n\t\t// \t\t\t\tsum: response.BASKET_DATA.allSum_FORMATED,\n\t\t// \t\t\t\tsumNumber: response.BASKET_DATA.allSum,\n\t\t// \t\t\t},\n\t\t// \t\t});\n\t\t// \t}\n\t\t// })\n\n\t}\n\n\tclearBasket = () => {\n\t\t// const prepareData = [\n\t\t// \t{ name: 'via_ajax', value: 'Y' },\n\t\t// \t{ name: 'SITE_ID', value: \"s1\" },\n\t\t// \t{ name: 'sessid', value: BX.bitrix_sessid() },\n\t\t// \t{ name: 'signedParamsString', value: signedParams },\n\t\t// \t{ name: 'basketAction', value: 'recalculateAjax' },\n\t\t// ];\n\t\tconst { items } = this.state;\n\t\t// const newData = Object.keys(items).reduce((acc, el) => {\n\t\t// \treturn [...acc, { name: `basket[DELETE_${items[el].ID}]`, value: 'Y' }];\n\t\t// }, prepareData);\n\n\t\tconst self = this;\n\t\tself.setState({ isEmpty: true })\n\n\t\t// $.ajax({\n\t\t// \ttype: 'POST',\n\t\t// \tdata: newData,\n\t\t// \turl: '/bitrix/components/bitrix/sale.basket.basket/ajax.php',\n\t\t// \tsuccess: function (response) {\n\t\t// \t\tself.setState({ isEmpty: response.BASKET_DATA.EMPTY_BASKET })\n\t\t// \t}\n\t\t// })\n\n\t}\n\n\thandleChange = id => e => {\n\t\tthis.setState({ items: { ...this.state.items, [id]: { ...this.state.items[id], QUANTITY: e.target.value } } });\n\t}\n\n\thandleBlur = id => e => {\n\t\tconst self = this;\n\t\t// const prepareData = [\n\t\t// \t{ name: 'via_ajax', value: 'Y' },\n\t\t// \t{ name: 'SITE_ID', value: \"s1\" },\n\t\t// \t{ name: 'sessid', value: BX.bitrix_sessid() },\n\t\t// \t{ name: 'signedParamsString', value: signedParams },\n\t\t// \t{ name: 'basketAction', value: 'recalculateAjax' },\n\t\t// \t{ name: 'basket[' + e.target.name + ']', value: e.target.value },\n\t\t// ];\n\n\t\tconst minValue = e.target.value === '' ? 1 : false;\n\n\t\tif (minValue) {\n\t\t\tthis.setState({ items: { ...this.state.items, [id]: { ...this.state.items[id], QUANTITY: minValue } } })\n\t\t}\n\n\t\t// $.ajax({\n\t\t// \ttype: 'post',\n\t\t// \tdata: prepareData,\n\t\t// \turl: '/bitrix/components/bitrix/sale.basket.basket/ajax.php',\n\t\t// \tsuccess: function (response) {\n\n\t\t// \t\tself.setState({\n\t\t// \t\t\titems: { ...response.BASKET_DATA.GRID.ROWS },\n\t\t// \t\t\tbadge: {\n\t\t// \t\t\t\t...self.state.badge,\n\t\t// \t\t\t\tcount: response.BASKET_DATA.BASKET_ITEMS_COUNT,\n\t\t// \t\t\t\tsum: response.BASKET_DATA.allSum_FORMATED,\n\t\t// \t\t\t\tsumNumber: response.BASKET_DATA.allSum,\n\t\t// \t\t\t\tdiscount: response.BASKET_DATA.DISCOUNT_PRICE_ALL,\n\t\t// \t\t\t}\n\t\t// \t\t})\n\t\t// \t}\n\t\t// });\n\n\t}\n\n\tupdateValue = (target, name, newCount) => {\n\t\tconst self = this;\n\n\t\t// const prepareData = [\n\t\t// \t{ name: 'via_ajax', value: 'Y' },\n\t\t// \t{ name: 'SITE_ID', value: this.siteId },\n\t\t// \t{ name: 'sessid', value: BX.bitrix_sessid() },\n\t\t// \t{ name: 'signedParamsString', value: signedParams },\n\t\t// \t{ name: 'basketAction', value: 'recalculateAjax' },\n\t\t// \t{ name: 'basket[' + name + ']', value: newCount }\n\t\t// ];\n\n\t\t// $.ajax({\n\t\t// \ttype: 'post',\n\t\t// \tdata: prepareData,\n\t\t// \turl: '/bitrix/components/bitrix/sale.basket.basket/ajax.php',\n\t\t// \tsuccess: function (response) {\n\t\t// \t\tself.setState({\n\t\t// \t\t\titems: { ...response.BASKET_DATA.GRID.ROWS },\n\t\t// \t\t\tbadge: {\n\t\t// \t\t\t\t...self.state.badge, count: response.BASKET_DATA.BASKET_ITEMS_COUNT,\n\t\t// \t\t\t\tsum: response.BASKET_DATA.allSum_FORMATED,\n\t\t// \t\t\t\tsumNumber: response.BASKET_DATA.allSum,\n\t\t// \t\t\t\tdiscount: response.BASKET_DATA.DISCOUNT_PRICE_ALL,\n\t\t// \t\t\t}\n\t\t// \t\t});\n\t\t// \t}\n\t\t// });\n\t}\n\n\tdec = (id, name) => e => {\n\t\tconst { QUANTITY: count } = this.state.items[id];\n\t\tconst newCount = count - 1 <= 0 ? 1 : count - 1;\n\n\t\tthis.setState({ items: { ...this.state.items, [id]: { ...this.state.items[id], QUANTITY: newCount } } });\n\n\t\tconst target = e.target;\n\t\t// this.updateValue(target, name, newCount);\n\t}\n\n\tinc = (id, name) => e => {\n\t\tconst { QUANTITY: count } = this.state.items[id];\n\t\tconst newCount = Number(count) + 1;\n\n\t\tthis.setState({ items: { ...this.state.items, [id]: { ...this.state.items[id], QUANTITY: newCount } } });\n\n\t\tconst target = e.target;\n\t\tthis.updateValue(target, name, newCount);\n\n\t}\n\n\tcomponentDidMount() {\n\t\tconst self = this;\n\t\t// const postData = {\n\t\t// \t'via_ajax': 'Y',\n\t\t// \t'sessid': BX.bitrix_sessid(),\n\t\t// \t'site_id': BX.message('SITE_ID'),\n\t\t// \t'basketAction': 'recalculateAjax',\n\t\t// \t'signedParamsString': signedParams\n\t\t// };\n\n\t\t// BX.ajax({\n\t\t// \turl: '/bitrix/components/bitrix/sale.basket.basket/ajax.php',\n\t\t// \tmethod: 'POST',\n\t\t// \tdata: postData,\n\t\t// \tdataType: 'json',\n\t\t// \tonsuccess: function (response) {\n\t\t// \t\tself.setState({\n\t\t// \t\t\titems: response.BASKET_DATA.GRID.ROWS,\n\t\t// \t\t\tbadge: {\n\t\t// \t\t\t\tcount: response.BASKET_DATA.BASKET_ITEMS_COUNT,\n\t\t// \t\t\t\tsum: response.BASKET_DATA.allSum_FORMATED,\n\t\t// \t\t\t\tsumNumber: response.BASKET_DATA.allSum,\n\t\t// \t\t\t\tdiscount: response.BASKET_DATA.DISCOUNT_PRICE_ALL,\n\t\t// \t\t\t},\n\t\t// \t\t\tisEmpty: response.BASKET_DATA.EMPTY_BASKET\n\t\t// \t\t})\n\t\t// \t}\n\t\t// });\n\t\tconst response = data;\n\t\tself.setState({\n\t\t\titems: response.BASKET_DATA.GRID.ROWS,\n\t\t\tbadge: {\n\t\t\t\tcount: response.BASKET_DATA.BASKET_ITEMS_COUNT,\n\t\t\t\tsum: response.BASKET_DATA.allSum_FORMATED,\n\t\t\t\tsumNumber: response.BASKET_DATA.allSum,\n\t\t\t\tdiscount: response.BASKET_DATA.DISCOUNT_PRICE_ALL,\n\t\t\t},\n\t\t\tisEmpty: response.BASKET_DATA.EMPTY_BASKET\n\t\t})\n\t}\n\n\trenderItems = () => {\n\t\tconst { items } = this.state;\n\t\treturn (\n\t\t\t<TransitionGroup\n\t\t\t\tcomponent={null}\n\t\t\t\tclassName=\"simple-list\"\n\t\t\t>\n\t\t\t\t{\n\t\t\t\t\tObject.keys(items).map((el) => (\n\t\t\t\t\t\t<CSSTransition key={items[el].ID} classNames=\"simple-item\" timeout={5000}>\n\t\t\t\t\t\t\t<Item key={items[el].ID} data={items[el]}\n\t\t\t\t\t\t\t\tevents={\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tdec: this.dec,\n\t\t\t\t\t\t\t\t\t\tinc: this.inc,\n\t\t\t\t\t\t\t\t\t\thandleBlur: this.handleBlur,\n\t\t\t\t\t\t\t\t\t\thandleChange: this.handleChange,\n\t\t\t\t\t\t\t\t\t\tremoveItem: this.removeItem,\n\t\t\t\t\t\t\t\t\t}} />\n\t\t\t\t\t\t</CSSTransition>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</TransitionGroup>\n\t\t)\n\t}\n\n\trender() {\n\t\tif (Object.keys(this.state).length === 0) {\n\t\t\treturn (\n\t\t\t\t<div>loader...</div>\n\t\t\t)\n\t\t}\n\t\tconst { isEmpty } = this.state;\n\n\t\tif (isEmpty) {\n\t\t\treturn (\n\t\t\t\t<div className=\"baketEmpty\">\n\t\t\t\t\t<span className=\"baketEmpty__text\">\n\t\t\t\t\t\tВаша корзина пустра.\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\t\n\t\treturn (\n\t\t\t<form action=\"/personal/order/make/\" onSubmit={e => e.preventDefault()}>\n\t\t\t\t<section className=\"basket\">\n\t\t\t\t\t<div className=\"basket__container\">\n\t\t\t\t\t\t<Header events={{ clearBasket: this.clearBasket }} />\n\t\t\t\t\t\t<div className=\"basket__list\">\n\t\t\t\t\t\t\t{this.renderItems()}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Checkout data={this.state.badge} />\n\t\t\t\t</section>\n\t\t\t</form>\n\t\t)\n\n\t}\n}\nexport default BasketApp;\n/*\n\nif (document.getElementById('basket') !== null) {\n\tReactDOM.render(<BasketApp />, document.getElementById('basket'));\n}\n\n*/","import React from 'react';\r\nimport './App.scss';\r\nimport './loader.scss';\r\n\r\nimport Self from \"./component/Self/Self\";\r\nimport DataTable from \"./component/Data-table/Data-table\";\r\nimport Basket from \"./component/Basket\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Route path=\"/\" exact component={Self} />\r\n        <Route path=\"/DataTable\" component={DataTable} />\r\n        <Route path=\"/Basket\" component={Basket} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, HashRouter, Route, Link } from \"react-router-dom\";\n\nconst app = (\n  <HashRouter>\n    <App />\n  </HashRouter>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}